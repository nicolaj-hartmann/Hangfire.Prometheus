name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "8.0.x"

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: "6.0"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run Tests
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"

      - name: Publish Code Coverage Results
        uses: codecov/codecov-action@v4
        with:
          files: "**/coverage.cobertura.xml"
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.0.0

  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: approval-required

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "8.0.x"

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: "6.0"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.0.0

      - name: Pack NuGet Package
        run: dotnet build --configuration Release --output ./nupkg /p:Version=${{ steps.gitversion.outputs.semVer }}

      - name: Publish NuGet Package
        run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          name: Release ${{ steps.gitversion.outputs.semVer }}
          body: |
            Release notes for version ${{ steps.gitversion.outputs.semVer }}.

      - name: Upload NuGet Package to Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          files: ./nupkg/*.nupkg